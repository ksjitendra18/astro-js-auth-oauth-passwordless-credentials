import { createSignal, Show, type JSX } from "solid-js";
import Loader2 from "lucide-solid/icons/loader-2";

interface Props {
  qrCode: string;
  secretCode: string;
}

export const TwoFactorSetupForm = ({ qrCode, secretCode }: Props) => {
  const [showSecret, setShowSecret] = createSignal(false);
  const [loading, setLoading] = createSignal(false);
  const [msg, setMsg] = createSignal("");
  const [success, setSuccess] = createSignal(false);

  const handleSubmit: JSX.EventHandlerUnion<
    HTMLFormElement,
    SubmitEvent
  > = async (e) => {
    e.preventDefault();
    const formData = new FormData(e.currentTarget);

    const enteredCode = formData.get("enteredCode");

    try {
      setLoading(true);
      setMsg("");
      setSuccess(false);

      const res = await fetch("/api/auth/two-factor/setup", {
        method: "POST",
        body: JSON.stringify({ enteredCode, secretCode }),
      });

      const resData = await res.json();

      if (res.status !== 200) {
        setMsg(resData.message);
      } else {
        setSuccess(true);
        setMsg("Two Factor Integration Success. Save the recovery codes");
      }
    } catch (error) {
      setMsg("Server Error. Please try again later.");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div>
      <h2 class="text-2xl  font-bold my-2">Step 1: Set up</h2>
      <div class="flex flex-wrap h-full flex-col md:flex-row  justify-between border-2 ">
        <div class="flex-1 items-center flex flex-col justify-center">
          <h3 class="my-2 text-xl font-semibold">Scan the qr code</h3>
          <img src={qrCode} />
        </div>
        <div class="flex flex-col flex-1 h-auto items-center justify-center border-l-2">
          {showSecret() ? (
            <p class="font-bold">{secretCode}</p>
          ) : (
            <p>Can't scan? Set up with code</p>
          )}
          <button
            onClick={() => setShowSecret((prev) => !prev)}
            class="bg-black text-white px-5 my-2 text-sm py-2 rounded-md "
          >
            {showSecret() ? "Hide Code" : "Display Code"}
          </button>
        </div>
      </div>

      <h2 class="text-2xl font-bold mt-5 mb-2">Step 2: Enter Code</h2>
      <form
        onSubmit={handleSubmit}
        class="md:w-1/2 my-4 w-full flex flex-col gap-2 md:flex-row mx-auto"
      >
        <input
          name="enteredCode"
          class="bg-transparent border-2 border-gray-700 md:w-3/4 w-full rounded-md px-2 py-2"
          type="text"
          required
          placeholder="Enter 6 digit code generated by your app"
        />

        <button
          disabled={loading()}
          class="bg-black disabled:bg-black/60 text-white text-sm rounded-md px-3 py-2 flex items-center justify-center gap-2"
        >
          <Show when={loading()}>
            <Loader2 class="animate-spin mx-auto" />
          </Show>
          <Show when={!loading()}>Verify</Show>
        </button>
      </form>

      <div class="flex flex-col gap-4 items-center justify-center w-full">
        {msg() && (
          <>
            <p
              class={` ${
                success() ? "bg-green-600" : "bg-red-600"
              } mt-5 rounded-md w-fit px-2 py-2  text-white`}
            >
              {msg()}
            </p>

            {success() && (
              <a
                href="/recovery-codes"
                class="bg-black mb-10 rounded-md text-white px-6 py-2 "
              >
                View Recovery Codes
              </a>
            )}
          </>
        )}
      </div>
    </div>
  );
};
